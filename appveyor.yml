environment:
  GC_PATH: 'C:\CloudSDK'
  matrix:
    - nodejs_version: "8"
    - nodejs_version: "10"
    - nodejs_version: "12"
    - nodejs_version: "14"

image:
  - Visual Studio 2017

matrix:
  fast_finish: true

platform:
  - x86
  - x64

# Install scripts. (runs after repo cloning)
install:
  # download Cloud SDK
  - appveyor DownloadFile https://dl.google.com/dl/cloudsdk/channels/rapid/GoogleCloudSDKInstaller.exe
  # install Cloud SDK
  - GoogleCloudSDKInstaller.exe /S /noreporting /nostartmenu /nodesktop /logtofile /D=%GC_PATH%
  - SET PATH=%PATH%;%GC_PATH%\google-cloud-sdk\;%GC_PATH%\google-cloud-sdk\bin\
  # prepare for non-interactive Cloud SDK components update
  - gcloud.cmd components copy-bundled-python>>python_path.txt && SET /p CLOUDSDK_PYTHON=<python_path.txt && DEL python_path.txt
  - refreshenv
  # update all Cloud SDK components
  - gcloud.cmd components update --quiet
  # add beta component
  - gcloud.cmd components install beta --quiet
  # install datastore emulator
  - gcloud.cmd components install cloud-datastore-emulator --quiet
  # Install node.js versions
  - ps: Install-Product node $env:nodejs_version $env:platform
  # Pull google/cloud-sdk Docker image, but currently not supported
  # - docker pull google/cloud-sdk
  # Install npm dependencies
  - npm install
  - npm install --no-save @google-cloud/datastore

# Post-install test scripts.
test_script:
  # Output useful info for debugging.
  - node --version
  - npm --version
  - java -version
  # run tests
  - npm run test:appveyor & exit 0

# Don't actually build.
build: off
# Access to VM via RDP
#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
